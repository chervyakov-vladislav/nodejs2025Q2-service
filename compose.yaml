services:
  db:
    container_name: database
    build:
      context: .
      dockerfile: Dockerfile.db
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}" # for migrations
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db:/var/lib/postgresql/data
      - db_logs:/var/lib/postgresql/data
    command: postgres -c port=${POSTGRES_PORT} -c logging_collector=on -c log_directory=log -c log_filename='postgresql-%Y-%m-%d_%H%M%S.log' -c log_statement=all
    restart: on-failure:5
    networks:
      - home-library-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    
  app:
    container_name: server
    build:
      context: .
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-production}
    ports:
      - "${PORT}:${PORT}"
    env_file:
      - .env
    restart: on-failure:5
    depends_on:
      db:
        condition: service_healthy
    networks:
      - home-library-network
    command: ${APP_COMMAND:-npm run start:prod}
    working_dir: /app
    develop:
      watch:
        - action: sync
          path: ./src
          target: /app/src

volumes:
  db:
  db_logs:

networks:
  home-library-network:
    driver: bridge